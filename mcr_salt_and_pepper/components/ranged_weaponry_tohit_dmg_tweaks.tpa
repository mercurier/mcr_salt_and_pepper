

INCLUDE ~%MOD_FOLDER%/components/items_prep.tpa~

LAF SFO_read_ini_file RET_ARRAY opt_array=SFO_reserved_ini_hash END

ACTION_IF (MOD_IS_INSTALLED ~%TP2_FILE_NAME%~ 3021) BEGIN
	LAF SFO_read_ini_file STR_VAR ini_to_read= EVAL ~%MOD_FOLDER%/components/35e_tohit_damage_approx.ini~
		RET_ARRAY opt_array=SFO_reserved_ini_hash END
END ELSE ACTION_IF (MOD_IS_INSTALLED ~%TP2_FILE_NAME%~ 3022) BEGIN
	LAF SFO_read_ini_file STR_VAR ini_to_read= EVAL ~%MOD_FOLDER%/components/35e_tohit_damage_real.ini~
		RET_ARRAY opt_array=SFO_reserved_ini_hash END
END ELSE BEGIN
	COPY_EXISTING - ~bull01.itm~ nowhere
		READ_SHORT 0x8a $opt_array(~ammo_damage_dices_thrown~)  // read default ammo # of dmg dies
		READ_SHORT 0x8c $opt_array(~bullet_damage_bonus~)  // read default ammo damage bonus
	BUT_ONLY
	
	OUTER_SET $opt_array(~launcher_damage_dices_thrown~) = 0
	// read default launcher damage dice number, to-ht and damage bonus
	COPY_EXISTING - ~bow05.itm~ nowhere
		READ_SHORT 0x8a $opt_array(~shortbow_damage_dice_size~)
		READ_SHORT 0x86 $opt_array(~shortbow_to_hit_bonus~)
		READ_SHORT 0x8c $opt_array(~shortbow_damage_bonus~)
	BUT_ONLY
	COPY_EXISTING - ~bow03.itm~ nowhere
		READ_SHORT 0x8a $opt_array(~longbow_damage_dice_size~)
		READ_SHORT 0x86 $opt_array(~longbow_to_hit_bonus~)
		READ_SHORT 0x8c $opt_array(~longbow_damage_bonus~)
	BUT_ONLY
	COPY_EXISTING - ~xbow04.itm~ nowhere
		READ_SHORT 0x8a $opt_array(~light_xbow_damage_dice_size~)
		READ_SHORT 0x86 $opt_array(~light_xbow_damage_bonus~)
		READ_SHORT 0x8c $opt_array(~light_xbow_to_hit_bonus~)
	BUT_ONLY
	COPY_EXISTING - ~xbow01.itm~ nowhere
		READ_SHORT 0x8a $opt_array(~heavy_xbow_damage_dice_size~)
		READ_SHORT 0x86 $opt_array(~heavy_xbow_damage_bonus~)
		READ_SHORT 0x8c $opt_array(~heavy_xbow_to_hit_bonus~)
	BUT_ONLY
	COPY_EXISTING - ~slng01.itm~ nowhere
		READ_SHORT 0x8a $opt_array(~sling_damage_dice_size~)
		READ_SHORT 0x86 $opt_array(~sling_damage_bonus~)
		READ_SHORT 0x8c $opt_array(~sling_to_hit_bonus~)
	BUT_ONLY
END

ACTION_IF (MOD_IS_INSTALLED ~%TP2_FILE_NAME%~ 3030) BEGIN
	OUTER_SET launcher_enchantment_bonus_to_ammo = 1
END ELSE BEGIN
	OUTER_SET launcher_enchantment_bonus_to_ammo = 0
END

ACTION_IF (MOD_IS_INSTALLED ~%TP2_FILE_NAME%~ 3040) BEGIN
	OUTER_SET launcher_strength_bonus = 1
END ELSE BEGIN
	OUTER_SET launcher_strength_bonus = 0
END

PRINT ~printing all loaded options~
ACTION_PHP_EACH opt_array AS key => value BEGIN
	// OUTER_SPRINT value $opt_array(~%key%~)
	PRINT ~key %key% : %value%~
END

// prepare strength bonus calculator
// OUTER_SET half_str_bonus = 1
COPY_EXISTING - ~strmod.2da~ nowhere
	COUNT_2DA_COLS n_cols
	COUNT_2DA_ROWS n_cols n_rows
	READ_2DA_ENTRIES_NOW ~strmod2da~ n_cols
BUT_ONLY

COPY_EXISTING - ~strmodex.2da~ nowhere
	COUNT_2DA_COLS n_cols
	COUNT_2DA_ROWS n_cols n_rows
	READ_2DA_ENTRIES_NOW ~strmodex2da~ n_cols
BUT_ONLY

DEFINE_PATCH_FUNCTION get_str_dmg INT_VAR strength=0 strength_ex=0 RET str_dmg BEGIN
	// str_dmg_raw = $str_mod(~%strength%~)
	READ_2DA_ENTRY_FORMER ~strmod2da~ strength 2 str_dmg_raw
	str_dmg = (str_dmg_raw>0) ? str_dmg_raw : 0
	PATCH_IF strength = 18 BEGIN
		READ_2DA_ENTRY_FORMER ~strmodex2da~ strength_ex 2 str_ex_dmg
		// str_dmg += $str_mod_ex(~%strength_ex%~)
		str_dmg += str_ex_dmg
	END
END

// prepare eff files for enchantment bonus management
ACTION_IF launcher_enchantment_bonus_to_ammo=1 BEGIN
	LAF generate_blank_file INT_VAR inlined=1 STR_VAR type="eff" END
	ACTION_FOR_EACH i_ench IN 1 2 3 4 5 6 BEGIN
		COPY ~inlined/temp.eff~ ~override/MC#E%i_ench%A1.eff~
			WRITE_LONG 0x10 167  // missle attack bonus
			WRITE_LONG 0x14 1    // self
			WRITE_LONG 0x1c 1    // value
			WRITE_LONG 0x20 0    // increment
			WRITE_LONG 0x24 2    // while equipped
			WRITE_LONG 0x38 0
			WRITE_LONG 0x3c 0
			WRITE_LONG 0x40 0
			WRITE_LONG 0x44 0
			WRITE_LONG 0x90 0
			WRITE_EVALUATED_ASCII 0x94 ~MC#E%i_ench%A1~
		BUT_ONLY
		COPY_EXISTING ~MC#E%i_ench%A1.eff~ ~override/MC#E%i_ench%D1.eff~
			WRITE_LONG  0x10 286  // missle dmg bonus
			WRITE_EVALUATED_ASCII 0x94 ~MC#E%i_ench%D1~
		BUT_ONLY
		// COPY_EXISTING ~MC#E%i_ench%A1.eff~ ~override/MC#E%i_ench%A1D.eff~
			// WRITE_LONG 0x10 286  // missle dmg bonus
		BUT_ONLY
	END
END

// patch launchers and ammo
COPY_EXISTING_REGEXP GLOB ~.*\.itm$~ ~override~
	PATCH_IF (%SOURCE_SIZE% > 0x7f) BEGIN
		PATCH_MATCH ~%SOURCE_RES%~ WITH // exclude easter egg items
			~mdk2gun~ ~secret01~ ~xbow12~
			~bolt07~ ~flam01~ ~frag01~ ~fragsap~ ~frosty~ ~laser~ ~mdk2bull~ ~mdk2bul2~ ~puls01~ ~puls02~ ~secret02~ ~secret03~ ~secret04~
		BEGIN END DEFAULT
			// get first launcher header offset
			GET_OFFSET_ARRAY itm_headers ITM_V10_HEADERS
			PHP_EACH itm_headers AS idx => header_off BEGIN
				READ_BYTE header_off ability_type
				READ_BYTE header_off+2 ability_loc
				READ_SHORT 0x1c item_type
				READ_LONG  0x60 item_ench
				PATCH_IF (ability_type=4) AND (item_type = 0x0f || item_type = 0x12 || item_type = 0x1b) BEGIN  // bows crossbows slings
					PATCH_PRINT ~%SOURCE_RES% header offset %header_off% type %ability_type% loc %ability_loc%~
					READ_BYTE  0x20 thief_unusable
					is_long_heavy = ((thief_unusable BAND 0b01000000) > 0)  // is longbow or heavy xbow?
					
					WRITE_SHORT header_off+0x1c 4  // missle damage type
					READ_BYTE  header_off+0x26 flag_str
					flag_str = (flag_str BAND 0b11110010)
					WRITE_BYTE header_off+0x26 flag_str  // remove str thac0 dmg bonus flag
					READ_SHORT 0x26 str_req
					PATCH_IF launcher_strength_bonus=1 BEGIN
						READ_SHORT 0x28 str_ex_req
						LPF get_str_dmg INT_VAR strength=str_req strength_ex=str_ex_req RET str_dmg END
					END ELSE BEGIN
						str_dmg = (str_req - 14 >0)? (str_req - 14)/2 : 0  // vanilla behavior
					END
					
					WRITE_SHORT header_off+0x18 $opt_array(~launcher_damage_dices_thrown~) // damage_dies_thrown
					
					PATCH_IF item_ench>0 AND launcher_enchantment_bonus_to_ammo=1 BEGIN
						LPF ADD_ITEM_EQEFFECT
							INT_VAR opcode=345 target=1 timing=2 parameter1=item_ench special = 1
						END
						
						// add eff to block redundant ammo enchantment bonus
						FOR (i_ench=1; i_ench<=item_ench; ++i_ench) BEGIN
							LPF ADD_ITEM_EQEFFECT INT_VAR opcode=318 target=1 timing=2 STR_VAR resource= EVAL ~MC#E%i_ench%A1~ END
							LPF ADD_ITEM_EQEFFECT INT_VAR opcode=318 target=1 timing=2 STR_VAR resource= EVAL ~MC#E%i_ench%D1~ END
						END
					END
					// END 

					// Standardize to-hit and damage bonus
					READ_SHORT header_off+0x16 old_damage_dice_size
					READ_SHORT header_off+0x14 old_to_hit_bonus
					READ_SHORT header_off+0x1a old_damage_bonus
					PATCH_MATCH item_type WITH
					0x0f BEGIN // bows
						// PATCH_PRINT ~bows E:%launcher_enchantment_bonus_to_ammo% eq %item_ench% die size~
						WRITE_SHORT header_off+0x16 (is_long_heavy ?
							($opt_array(~longbow_damage_dice_size~)) :
							($opt_array(~shortbow_damage_dice_size~)))  // damage dice size
						WRITE_SHORT header_off+0x14 launcher_enchantment_bonus_to_ammo*item_ench + (is_long_heavy ?
							($opt_array(~longbow_to_hit_bonus~)) :
							($opt_array(~shortbow_to_hit_bonus~)))  // to hit bonus
						WRITE_SHORT header_off+0x1a launcher_enchantment_bonus_to_ammo*item_ench + (is_long_heavy ?
							($opt_array(~longbow_damage_bonus~)) :
							($opt_array(~shortbow_damage_bonus~))) + str_dmg  // damage bonus
					END 0x1b BEGIN // xbows
						WRITE_SHORT header_off+0x16 (is_long_heavy ?
							($opt_array(~heavy_xbow_damage_dice_size~)) :
							($opt_array(~light_xbow_damage_dice_size~)))  // damage dice size
						WRITE_SHORT header_off+0x14 launcher_enchantment_bonus_to_ammo*item_ench + (is_long_heavy ?
							($opt_array(~heavy_xbow_to_hit_bonus~)) :
							($opt_array(~light_xbow_to_hit_bonus~)))  // to hit bonus
						WRITE_SHORT header_off+0x1a launcher_enchantment_bonus_to_ammo*item_ench + (is_long_heavy ?
							($opt_array(~heavy_xbow_damage_bonus~)) :
							($opt_array(~light_xbow_damage_bonus~)))  // damage bonus
					END 0x12 BEGIN // slings
						WRITE_SHORT header_off+0x16 $opt_array(~sling_damage_dice_size~)  // damage dice size
						WRITE_SHORT header_off+0x14 launcher_enchantment_bonus_to_ammo*item_ench + 
							$opt_array(~sling_to_hit_bonus~)  // to hit bonus
						WRITE_SHORT header_off+0x1a launcher_enchantment_bonus_to_ammo*item_ench + 
							$opt_array(~sling_damage_bonus~)  // damage bonus
					END DEFAULT END
					READ_SHORT header_off+0x16 new_damage_dice_size
					READ_SHORT header_off+0x14 new_to_hit_bonus
					READ_SHORT header_off+0x1a new_damage_bonus
					PATCH_IF (new_to_hit_bonus != old_to_hit_bonus) OR (new_damage_bonus != old_damage_bonus) OR 
						($opt_array(~launcher_damage_dices_thrown~)>0) BEGIN
						PATCH_PRINT ~updating desc...~
						LPF update_weaponry_description INT_VAR 
							to_hit_bonus = new_to_hit_bonus
							damage_bonus = new_damage_bonus
							damage_dies = $opt_array(~launcher_damage_dices_thrown~)
							damage_dice_size = new_damage_dice_size
						END
					END
				END
			 
				PATCH_IF (ability_type=2) AND (item_type = 0x05 || item_type = 0x1f || item_type = 0x0e) BEGIN // arrow, bolt, and bullet
					PATCH_PRINT ~%SOURCE_RES% header offset %header_off% type %ability_type% loc %ability_loc%~
					WRITE_SHORT header_off+0x1c 4  // missle damage type
					WRITE_SHORT header_off+0x18 $opt_array(~ammo_damage_dices_thrown~)
					// add enchantment based to-hit and damage bonus
					PATCH_IF launcher_enchantment_bonus_to_ammo=1 BEGIN
						// magic here
						FOR (ent_level=1; ent_level<=item_ench;++ent_level) BEGIN
							LPF ADD_ITEM_EQEFFECT INT_VAR
								opcode=177
								target=1
								timing=2
								parameter1=0
								parameter2=2
								insert_point=(0 - 1)
								STR_VAR resource= EVAL ~MC#E%ent_level%A1~
							END
							LPF ADD_ITEM_EQEFFECT INT_VAR
								opcode=177
								target=1
								timing=2
								parameter1=0
								parameter2=2
								insert_point=(0 - 1)
								STR_VAR resource= EVAL ~MC#E%ent_level%D1~
							END
						END
						WRITE_SHORT header_off+0x14 0  // to hit bonus
						WRITE_SHORT header_off+0x1a (item_type=0x0e)*$opt_array(~bullet_damage_bonus~)  // damage bonus
					END ELSE BEGIN // vanilla behavior
						WRITE_SHORT header_off+0x14 item_ench  // to hit bonus
						WRITE_SHORT header_off+0x1a item_ench+(item_type=0x0e)*$opt_array(~bullet_damage_bonus~)  // damage bonus
					END
					
					PATCH_IF $opt_array(~ammo_damage_dices_thrown~)=1 BEGIN
						READ_SHORT header_off+0x16 old_damage_dice_size
						WRITE_SHORT header_off+0x16 
							($opt_array(~shortbow_damage_dice_size~))*(item_type = 0x05) +
							($opt_array(~light_xbow_damage_dice_size~))*(item_type = 0x1f) + 
							($opt_array(~sling_damage_dice_size~))*(item_type = 0x0e)
					END ELSE BEGIN
						WRITE_SHORT header_off+0x16 0
					END
					READ_SHORT header_off+0x16 new_damage_dice_size
						LPF update_weaponry_description INT_VAR 
							to_hit_bonus = item_ench
							damage_bonus = item_ench
							damage_dies = 1
							damage_dice_size = new_damage_dice_size
						END
				END
			END
		END
	END
BUT_ONLY
